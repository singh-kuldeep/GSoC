--- modules.tex	2016-04-18 13:39:51.000000000 +0530
+++ modules_new.tex	2016-08-22 13:31:33.622002000 +0530
@@ -66,7 +66,7 @@
 \end{Verbatim}
 
 \begin{Verbatim}[commandchars=\\\{\}]
-    \bnt{name} ::= \kw{cycloidal} \{ \kw{uniform 1D} | \kw{uniform 2D} | \kw{Polimi} \}
+    \bnt{name} ::= \kw{cycloidal} \{ \kw{uniform 1D} | \kw{uniform 2D} | \kw{Polimi} | \kw{DMST} \}
 
     \bnt{module_data} ::=
         \bnt{aircraft_node_label} ,
@@ -74,10 +74,20 @@
         \bnt{rotor_node_label}
         (\ty{bool}) \bnt{average} ,
         \bnt{rotor_radius} ,
-        \bnt{blade_span}
+        \bnt{blade_span} ,
         [ , \kw{delay} , (\hty{DriveCaller}) \bnt{delay} ]
         [ , \kw{omegacut} , \bnt{cut_frequency} ]
+        \bnt{kappa} ,
         [ , \kw{timestep} , \bnt{time_step} ]
+        [ , \kw{omega} , \bnt{OMEGA} ]
+         \bnt{CURR_DRUM + BLADE_1} , 
+         \bnt{CURR_DRUM + BLADE_2} , 
+         \bnt{CURR_DRUM + BLADE_3} , 
+         \bnt{CURR_DRUM + BLADE_4} , 
+         \bnt{CURR_DRUM + BLADE_5} , 
+         \bnt{CURR_DRUM + BLADE_6} , 
+        [ ,\kw{output} , \bnt{yes | no};]
+    
 \end{Verbatim}
 
 
@@ -105,8 +115,8 @@
     AIRCRAFT,
     orientation,
         reference, node,
-    	    1, 0., 0., 1.,
-    	    3, 0., 1., 0.,
+            1, 0., 0., 1.,
+            3, 0., 1., 0.,
     CURR_DRUM,
     0, # no average
     # 1, # average
@@ -117,11 +127,48 @@
     omegacut, OMEGA_CUT,
     kappa, 1.3, # hover empirical correction coefficient
     timestep, DT,
-    output, yes;	
+    output, yes;    
+
 \end{verbatim}
+
 While this one defines a cyclocopter with a twodimensional inflow model.
 
 
+\paragraph{Example 3.} \
+\begin{verbatim}
+user defined: CURR_DRUM, # inflow model, cyclocopter
+    cyclocopter DMST, # Double Multiple stream tube
+    GROUND,
+    orientation,
+        reference, node,
+            1, 0., 0., 1.,
+            3, 0., 1., 0.,
+    #CURR_DRUM,
+    0, # no average
+    # 1, # average
+    ROTOR_DIAMETER/2.,
+    SPAN,
+    delay,
+    const, 0.5,
+    omegacut, OMEGA_CUT,
+    kappa, 2.1169, # hover empirical correction coefficient
+    timestep, DT,
+    omega, OMEGA,
+
+    # Blade labels 
+    CURR_DRUM + BLADE_1,
+    CURR_DRUM + BLADE_2,
+    CURR_DRUM + BLADE_3,
+    CURR_DRUM + BLADE_4,
+    CURR_DRUM + BLADE_5,
+    CURR_DRUM + BLADE_6,
+    output, yes; 
+
+\end{verbatim}
+
+While this one defines a cyclocopter with a Double Multiple Stream Tube inflow(DMST) model.
+
+
 \subsubsection{Output}
 The output is obtained in plain text in the \textbf{.usr} file where the columns represent,
 \begin{itemize}
@@ -135,31 +182,39 @@
 
 %~ CyclocopterUniform1D::Output(OutputHandler& OH) const
 %~ 
-                        %~ << " " << dAzimuth                	 /* 9 */
-                        %~ << " " << iStepCounter                	 /* 10 */
-                        %~ << " " << "0."                	 /* 11 */
-                        %~ << " " << "0."                	 /* 12 */
-                        %~ << " " << "0."                	 /* 13 */
-                        %~ << " " << FMeanOut                	 /* 14 */
+                        %~ << " " << dAzimuth                    /* 9 */
+                        %~ << " " << iStepCounter                    /* 10 */
+                        %~ << " " << "0."                    /* 11 */
+                        %~ << " " << "0."                    /* 12 */
+                        %~ << " " << "0."                    /* 13 */
+                        %~ << " " << FMeanOut                    /* 14 */
                         %~ << std::endl;
 %~ 
 %~ CyclocopterUniform2D::Output(OutputHandler& OH) const
 %~ 
-                        %~ << " " << dAzimuth                	 /* 9 */
-                        %~ << " " << iStepCounter                	 /* 10 */
-                        %~ << " " << dUind                	 /* 11-13 */
-                        %~ << " " << FMeanOut                	 /* 14-16 */
+                        %~ << " " << dAzimuth                    /* 9 */
+                        %~ << " " << iStepCounter                    /* 10 */
+                        %~ << " " << dUind                   /* 11-13 */
+                        %~ << " " << FMeanOut                    /* 14-16 */
                         %~ << std::endl;
                         %~ 
 %~ 
 %~ CyclocopterPolimi::Output(OutputHandler& OH) const
 %~ 
-                        %~ << " " << dUind                	 /* 9 -11*/
-                        %~ << " " << dXi                	 /* 12 */
+                        %~ << " " << dUind                   /* 9 -11*/
+                        %~ << " " << dXi                     /* 12 */
                         %~ << " " << dAzimuth               /* 13 */
-                        %~ << " " << FMeanOut                	 /* 14-16 */
+                        %~ << " " << FMeanOut                    /* 14-16 */
                         %~ << std::endl;
 
+ % CyclocopterDMST::Output(OutputHandler& OH) const
+
+                        % << " " << iStepCounter                  /* 9 */
+                        % << " " << dAzimuth                      /* 10 */ // First blade azimuth location
+                        % << " " << dBladeUind[0]                 /* 11-13 */ // Induced velocity at first blade
+                        % << " " << FMeanOut                      /* 14-16 */
+                        % << std::endl;
+
 
 \subsection{Module-fab-electric}
 \emph{Author: Eduardo Okabe}
